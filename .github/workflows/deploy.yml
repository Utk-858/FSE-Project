name: fse ci-cd

on:
  push:
    branches:
      - main # Only triggers for pushes to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    env: # Define Vercel token and IDs for the entire job
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }} # Ensure this secret is set
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }} # Ensure this secret is set

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # --- This is the crucial part ---
      # Vercel needs your project's dependencies installed to build it.
      - name: Install Project Dependencies
        run: npm install
        working-directory: ./FSE_Project/

      - name: Pull Vercel Environment Variables
        # Use --environment=production if main branch builds specifically need production variables.
        # If `preview` variables are sufficient for build, keep as is.
        run: vercel pull --yes --environment=production --token=$VERCEL_TOKEN --cwd FSE_Project

      # --- REMOVE the explicit `vercel build` step ---
      # Vercel's `deploy` command will automatically run the build.
      # - name: Build with Vercel
      #   run: vercel build --token=$VERCEL_TOKEN --cwd FSE_Project

      # --- Deploy to Vercel (now without --prebuilt) ---
      - name: Deploy to Vercel
        # Vercel will automatically detect your Vite project and run `npm run build` (or `vite build`)
        # as part of this deployment process.
        run: vercel deploy --prod --token=$VERCEL_TOKEN --cwd FSE_Project # IMPORTANT: --prod (for main branch)